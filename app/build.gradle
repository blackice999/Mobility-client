import com.github.spotbugs.SpotBugsTask

apply plugin: 'com.android.application'

apply from: "dependencies.gradle"
apply plugin: 'com.google.gms.google-services'
apply from: '../configs/ci_script.gradle'
apply plugin: "com.github.spotbugs"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.project.mobility"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError true // If there are some rule violations the build will fail
        checkDependencies = true // This will check the dependencies
        ignoreWarnings true // This will ignore all warnings
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'

    //ViewModel
    implementation lifeCycleDependencies.values()
    annotationProcessor lifeCycleAnnotationProcessorDependencies.values()

    //Network
    implementation networkDependencies.values()

    //Views, Layouts
    implementation layoutDependencies.values()

    //Injection
    implementation injectionDependencies.values()
    annotationProcessor injectionAnnotationProcessorDependencies.values()

    //Glide
    implementation glideDependencies.values()
    annotationProcessor glideAnnotationProcessorDependencies.values()

    //ButterKnife
    implementation butterknifeDependencies.values()
    annotationProcessor butterknifeAnnotationProcessorDependencies.values()

    //Gson
    implementation gsonDependencies.values()

    //Firebase
    implementation firebaseDepedencies.values()

    //Spotbugs
    implementation spotbugsDependencies.values()

    //Google auth services
    implementation googleAuthDependencies.values()

    //LeakCanary
    debugImplementation leakCanaryDebugDependencies.values()
    releaseImplementation leakCanaryReleaseDependencies.values()

    //Material design
    implementation materialDependencies.values()

    //Facebook
    implementation facebookDependencies.values()

    //Timber
    implementation loggingDependencies.values()

    //rx
    implementation rxDependencies.values()
    implementation 'androidx.paging:paging-runtime:2.1.0'
}

task spotbugs(type: SpotBugsTask) {
    ignoreFailures = false
    effort = "default"
    reportLevel = "medium"
    classes = files("$project.buildDir/intermediates/javac")
    excludeFilter = file("$project.rootDir/configs/spotbugs/exclude.xml")

    source = fileTree('src/main/java/')
    classpath = files()
    reports {
        xml.enabled = false
        xml.withMessages = true
        html.enabled = true
        xml.destination file("$project.buildDir/reports/spotbugs/spotbugs.xml")
        html.destination file("$project.buildDir/reports/spotbugs/spotbugs.html")
    }
}

repositories {
    mavenCentral()
}
